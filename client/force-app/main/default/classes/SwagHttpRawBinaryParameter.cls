/*
 * configapi
 * Config API lets you easily manage configuration at scale.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * Raw binary parameter that defines the entire body oft he HTTP payload; cannot be used with other parameter types
 */
public class SwagHttpRawBinaryParameter implements Swagger.MappedProperties {
    /**
     * Binary bytes value of the parameter
     * @return parameterValue
     */
    public Blob parameterValue { get; set; }

    /**
     * Optional; use the output from a previous task as the input to this parameter.  Set to null (default) to ignore.
     * @return useOutputFromPreviousTask
     */
    public SwagTaskOutputReference useOutputFromPreviousTask { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'ParameterValue' => 'parameterValue',
        'UseOutputFromPreviousTask' => 'useOutputFromPreviousTask'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static SwagHttpRawBinaryParameter getExample() {
        SwagHttpRawBinaryParameter httpRawBinaryParameter = new SwagHttpRawBinaryParameter();
        httpRawBinaryParameter.parameterValue = EncodingUtil.base64Decode('VGhlIHF1aWNrIGJyb3duIGZveCBqdW1wZWQgb3ZlciB0aGUgbGF6eSBkb2cu');
        httpRawBinaryParameter.useOutputFromPreviousTask = SwagTaskOutputReference.getExample();
        return httpRawBinaryParameter;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagHttpRawBinaryParameter) {
            SwagHttpRawBinaryParameter httpRawBinaryParameter = (SwagHttpRawBinaryParameter) obj;
            return this.parameterValue == httpRawBinaryParameter.parameterValue
                && this.useOutputFromPreviousTask == httpRawBinaryParameter.useOutputFromPreviousTask;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (parameterValue == null ? 0 : System.hashCode(parameterValue));
        hashCode = (17 * hashCode) + (useOutputFromPreviousTask == null ? 0 : System.hashCode(useOutputFromPreviousTask));
        return hashCode;
    }
}

