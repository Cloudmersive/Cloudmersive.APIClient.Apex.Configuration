/*
 * configapi
 * Config API lets you easily manage configuration at scale.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * HTTP header to add to the HTTP request
 */
public class SwagHttpOrchestrationHeader implements Swagger.MappedProperties {
    /**
     * Name of the HTTP header, e.g. "Content-Type"
     * @return headerName
     */
    public String headerName { get; set; }

    /**
     * Value of the HTTP header
     * @return headerValue
     */
    public String headerValue { get; set; }

    /**
     * Optional; use the output from a previous task as the input to this parameter.  Set to null (default) to ignore.
     * @return useOutputFromPreviousTask
     */
    public SwagTaskOutputReference useOutputFromPreviousTask { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'HeaderName' => 'headerName',
        'HeaderValue' => 'headerValue',
        'UseOutputFromPreviousTask' => 'useOutputFromPreviousTask'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static SwagHttpOrchestrationHeader getExample() {
        SwagHttpOrchestrationHeader httpOrchestrationHeader = new SwagHttpOrchestrationHeader();
        httpOrchestrationHeader.headerName = 'aeiou';
        httpOrchestrationHeader.headerValue = 'aeiou';
        httpOrchestrationHeader.useOutputFromPreviousTask = SwagTaskOutputReference.getExample();
        return httpOrchestrationHeader;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagHttpOrchestrationHeader) {
            SwagHttpOrchestrationHeader httpOrchestrationHeader = (SwagHttpOrchestrationHeader) obj;
            return this.headerName == httpOrchestrationHeader.headerName
                && this.headerValue == httpOrchestrationHeader.headerValue
                && this.useOutputFromPreviousTask == httpOrchestrationHeader.useOutputFromPreviousTask;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (headerName == null ? 0 : System.hashCode(headerName));
        hashCode = (17 * hashCode) + (headerValue == null ? 0 : System.hashCode(headerValue));
        hashCode = (17 * hashCode) + (useOutputFromPreviousTask == null ? 0 : System.hashCode(useOutputFromPreviousTask));
        return hashCode;
    }
}

