/*
 * configapi
 * Config API lets you easily manage configuration at scale.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * SwagHttpOrchestrationTask
 */
public class SwagHttpOrchestrationTask implements Swagger.MappedProperties {
    /**
     * An identifier for this task name, e.g. CreateCustomer or ScanForVirus; allows you to refer to this task from other tasks; if not supplied, it will default to a 0-based integer index of the task
     * @return taskName
     */
    public String taskName { get; set; }

    /**
     * HTTP Method, e.g. GET, PUT, POST, etc.
     * @return httpMethod
     */
    public String httpMethod { get; set; }

    /**
     * HTTP URL to orchestrate
     * @return URL
     */
    public String URL { get; set; }

    /**
     * Optional; HTTP headers to apply to the request
     * @return httpHeaders
     */
    public List<SwagHttpOrchestrationHeader> httpHeaders { get; set; }

    /**
     * Optional; query parameters, these query parameters will be incorporated into the URL
     * @return queryParameters
     */
    public List<SwagHttpGetParameter> queryParameters { get; set; }

    /**
     * Optional; FormData parameters, these parameters will be stored in the body in a multi-part encoding
     * @return formDataParameters
     */
    public List<SwagHttpFormDataParameter> formDataParameters { get; set; }

    /**
     * Optional; x-www-form-urlencoded paramereters, these parameters will be stored in the body as an application/x-www-form-urlencoded encoding
     * @return wwwFormUrlEncodedParameters
     */
    public List<SwagHttpWwwFormUrlEncodedParameter> wwwFormUrlEncodedParameters { get; set; }

    /**
     * Optional; sets the body of the request as raw text, cannot be used with other parameter types in the same request
     * @return rawTextBody
     */
    public SwagHttpRawTextParameter rawTextBody { get; set; }

    /**
     * Optional; set the body of the request as binary, cannot be used with other parameter types in the same request
     * @return rawBinaryBody
     */
    public SwagHttpRawBinaryParameter rawBinaryBody { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'TaskName' => 'taskName',
        'HttpMethod' => 'httpMethod',
        'HttpHeaders' => 'httpHeaders',
        'QueryParameters' => 'queryParameters',
        'FormDataParameters' => 'formDataParameters',
        'WwwFormUrlEncodedParameters' => 'wwwFormUrlEncodedParameters',
        'RawTextBody' => 'rawTextBody',
        'RawBinaryBody' => 'rawBinaryBody'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public SwagHttpOrchestrationTask() {
        httpHeaders = new List<SwagHttpOrchestrationHeader>();
        queryParameters = new List<SwagHttpGetParameter>();
        formDataParameters = new List<SwagHttpFormDataParameter>();
        wwwFormUrlEncodedParameters = new List<SwagHttpWwwFormUrlEncodedParameter>();
    }

    public static SwagHttpOrchestrationTask getExample() {
        SwagHttpOrchestrationTask httpOrchestrationTask = new SwagHttpOrchestrationTask();
        httpOrchestrationTask.taskName = 'aeiou';
        httpOrchestrationTask.httpMethod = 'aeiou';
        httpOrchestrationTask.URL = 'aeiou';
        httpOrchestrationTask.httpHeaders = new List<SwagHttpOrchestrationHeader>{SwagHttpOrchestrationHeader.getExample()};
        httpOrchestrationTask.queryParameters = new List<SwagHttpGetParameter>{SwagHttpGetParameter.getExample()};
        httpOrchestrationTask.formDataParameters = new List<SwagHttpFormDataParameter>{SwagHttpFormDataParameter.getExample()};
        httpOrchestrationTask.wwwFormUrlEncodedParameters = new List<SwagHttpWwwFormUrlEncodedParameter>{SwagHttpWwwFormUrlEncodedParameter.getExample()};
        httpOrchestrationTask.rawTextBody = SwagHttpRawTextParameter.getExample();
        httpOrchestrationTask.rawBinaryBody = SwagHttpRawBinaryParameter.getExample();
        return httpOrchestrationTask;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagHttpOrchestrationTask) {
            SwagHttpOrchestrationTask httpOrchestrationTask = (SwagHttpOrchestrationTask) obj;
            return this.taskName == httpOrchestrationTask.taskName
                && this.httpMethod == httpOrchestrationTask.httpMethod
                && this.URL == httpOrchestrationTask.URL
                && this.httpHeaders == httpOrchestrationTask.httpHeaders
                && this.queryParameters == httpOrchestrationTask.queryParameters
                && this.formDataParameters == httpOrchestrationTask.formDataParameters
                && this.wwwFormUrlEncodedParameters == httpOrchestrationTask.wwwFormUrlEncodedParameters
                && this.rawTextBody == httpOrchestrationTask.rawTextBody
                && this.rawBinaryBody == httpOrchestrationTask.rawBinaryBody;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (taskName == null ? 0 : System.hashCode(taskName));
        hashCode = (17 * hashCode) + (httpMethod == null ? 0 : System.hashCode(httpMethod));
        hashCode = (17 * hashCode) + (URL == null ? 0 : System.hashCode(URL));
        hashCode = (17 * hashCode) + (httpHeaders == null ? 0 : System.hashCode(httpHeaders));
        hashCode = (17 * hashCode) + (queryParameters == null ? 0 : System.hashCode(queryParameters));
        hashCode = (17 * hashCode) + (formDataParameters == null ? 0 : System.hashCode(formDataParameters));
        hashCode = (17 * hashCode) + (wwwFormUrlEncodedParameters == null ? 0 : System.hashCode(wwwFormUrlEncodedParameters));
        hashCode = (17 * hashCode) + (rawTextBody == null ? 0 : System.hashCode(rawTextBody));
        hashCode = (17 * hashCode) + (rawBinaryBody == null ? 0 : System.hashCode(rawBinaryBody));
        return hashCode;
    }
}

