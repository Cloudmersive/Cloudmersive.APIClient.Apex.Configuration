/*
 * configapi
 * Config API lets you easily manage configuration at scale.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * Raw text parameter that defines the entire body of the HTTP payload; cannot be used with other parameter types
 */
public class SwagHttpRawTextParameter implements Swagger.MappedProperties {
    /**
     * Text value of the parameter
     * @return parameterValue
     */
    public String parameterValue { get; set; }

    /**
     * Optional; use the output from a previous task as the input to this parameter.  Set to null (default) to ignore.
     * @return useOutputFromPreviousTask
     */
    public SwagTaskOutputReference useOutputFromPreviousTask { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'ParameterValue' => 'parameterValue',
        'UseOutputFromPreviousTask' => 'useOutputFromPreviousTask'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static SwagHttpRawTextParameter getExample() {
        SwagHttpRawTextParameter httpRawTextParameter = new SwagHttpRawTextParameter();
        httpRawTextParameter.parameterValue = 'aeiou';
        httpRawTextParameter.useOutputFromPreviousTask = SwagTaskOutputReference.getExample();
        return httpRawTextParameter;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagHttpRawTextParameter) {
            SwagHttpRawTextParameter httpRawTextParameter = (SwagHttpRawTextParameter) obj;
            return this.parameterValue == httpRawTextParameter.parameterValue
                && this.useOutputFromPreviousTask == httpRawTextParameter.useOutputFromPreviousTask;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (parameterValue == null ? 0 : System.hashCode(parameterValue));
        hashCode = (17 * hashCode) + (useOutputFromPreviousTask == null ? 0 : System.hashCode(useOutputFromPreviousTask));
        return hashCode;
    }
}

