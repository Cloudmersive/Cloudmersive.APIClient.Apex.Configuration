/*
 * configapi
 * Config API lets you easily manage configuration at scale.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * Request to create a setting
 */
public class SwagCreateSettingRequest implements Swagger.MappedProperties {
    /**
     * BucketID of the bucket to place the setting in; you can create a bucket by navigating to account.cloudmersive.com, clicking on Settings &gt; API Configuration &gt; Create Bucket
     * @return bucketID
     */
    public String bucketID { get; set; }

    /**
     * SecretKey of the bucket to place the setting in; you can create a bucket by navigating to account.cloudmersive.com, clicking on Settings &gt; API Configuration &gt; Create Bucket
     * @return bucketSecretKey
     */
    public String bucketSecretKey { get; set; }

    /**
     * Name of the setting to create
     * @return settingName
     */
    public String settingName { get; set; }

    /**
     * Type of setting to create; possible values are STRING, JSON
     * @return settingType
     */
    public String settingType { get; set; }

    /**
     * Initial value of the setting
     * @return settingValue
     */
    public Object settingValue { get; set; }

    /**
     * Description of the setting
     * @return settingDescription
     */
    public String settingDescription { get; set; }

    /**
     * Tags to apply to the setting
     * @return settingTags
     */
    public String settingTags { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'BucketID' => 'bucketID',
        'BucketSecretKey' => 'bucketSecretKey',
        'SettingName' => 'settingName',
        'SettingType' => 'settingType',
        'SettingValue' => 'settingValue',
        'SettingDescription' => 'settingDescription',
        'SettingTags' => 'settingTags'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static SwagCreateSettingRequest getExample() {
        SwagCreateSettingRequest createSettingRequest = new SwagCreateSettingRequest();
        createSettingRequest.bucketID = 'aeiou';
        createSettingRequest.bucketSecretKey = 'aeiou';
        createSettingRequest.settingName = 'aeiou';
        createSettingRequest.settingType = 'aeiou';
        createSettingRequest.settingValue = ;
        createSettingRequest.settingDescription = 'aeiou';
        createSettingRequest.settingTags = 'aeiou';
        return createSettingRequest;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagCreateSettingRequest) {
            SwagCreateSettingRequest createSettingRequest = (SwagCreateSettingRequest) obj;
            return this.bucketID == createSettingRequest.bucketID
                && this.bucketSecretKey == createSettingRequest.bucketSecretKey
                && this.settingName == createSettingRequest.settingName
                && this.settingType == createSettingRequest.settingType
                && this.settingValue == createSettingRequest.settingValue
                && this.settingDescription == createSettingRequest.settingDescription
                && this.settingTags == createSettingRequest.settingTags;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (bucketID == null ? 0 : System.hashCode(bucketID));
        hashCode = (17 * hashCode) + (bucketSecretKey == null ? 0 : System.hashCode(bucketSecretKey));
        hashCode = (17 * hashCode) + (settingName == null ? 0 : System.hashCode(settingName));
        hashCode = (17 * hashCode) + (settingType == null ? 0 : System.hashCode(settingType));
        hashCode = (17 * hashCode) + (settingValue == null ? 0 : System.hashCode(settingValue));
        hashCode = (17 * hashCode) + (settingDescription == null ? 0 : System.hashCode(settingDescription));
        hashCode = (17 * hashCode) + (settingTags == null ? 0 : System.hashCode(settingTags));
        return hashCode;
    }
}

