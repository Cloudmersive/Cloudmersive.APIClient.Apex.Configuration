/*
 * configapi
 * Config API lets you easily manage configuration at scale.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * Defines a parameter of type FormData (multipart/form-data)
 */
public class SwagHttpFormDataParameter implements Swagger.MappedProperties {
    /**
     * Name of the parameter
     * @return parameterName
     */
    public String parameterName { get; set; }

    /**
     * Text value of the parameter; if set, do not set ParameterFileContents or UseOutputFromPreviousTask
     * @return parameterTextValue
     */
    public String parameterTextValue { get; set; }

    /**
     * Binary contents of the parameter; if set, do not set ParameterTextValue or UseOutputFromPreviousTask
     * @return parameterFileContents
     */
    public Blob parameterFileContents { get; set; }

    /**
     * Optional; use the output from a previous task as the input to this parameter.  Set to null (default) to ignore.
     * @return useOutputFromPreviousTask
     */
    public SwagTaskOutputReference useOutputFromPreviousTask { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'ParameterName' => 'parameterName',
        'ParameterTextValue' => 'parameterTextValue',
        'ParameterFileContents' => 'parameterFileContents',
        'UseOutputFromPreviousTask' => 'useOutputFromPreviousTask'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static SwagHttpFormDataParameter getExample() {
        SwagHttpFormDataParameter httpFormDataParameter = new SwagHttpFormDataParameter();
        httpFormDataParameter.parameterName = 'aeiou';
        httpFormDataParameter.parameterTextValue = 'aeiou';
        httpFormDataParameter.parameterFileContents = EncodingUtil.base64Decode('VGhlIHF1aWNrIGJyb3duIGZveCBqdW1wZWQgb3ZlciB0aGUgbGF6eSBkb2cu');
        httpFormDataParameter.useOutputFromPreviousTask = SwagTaskOutputReference.getExample();
        return httpFormDataParameter;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagHttpFormDataParameter) {
            SwagHttpFormDataParameter httpFormDataParameter = (SwagHttpFormDataParameter) obj;
            return this.parameterName == httpFormDataParameter.parameterName
                && this.parameterTextValue == httpFormDataParameter.parameterTextValue
                && this.parameterFileContents == httpFormDataParameter.parameterFileContents
                && this.useOutputFromPreviousTask == httpFormDataParameter.useOutputFromPreviousTask;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (parameterName == null ? 0 : System.hashCode(parameterName));
        hashCode = (17 * hashCode) + (parameterTextValue == null ? 0 : System.hashCode(parameterTextValue));
        hashCode = (17 * hashCode) + (parameterFileContents == null ? 0 : System.hashCode(parameterFileContents));
        hashCode = (17 * hashCode) + (useOutputFromPreviousTask == null ? 0 : System.hashCode(useOutputFromPreviousTask));
        return hashCode;
    }
}

