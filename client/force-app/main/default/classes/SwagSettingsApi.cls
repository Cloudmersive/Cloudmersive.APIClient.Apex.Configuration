/*
 * configapi
 * Config API lets you easily manage configuration at scale.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

public class SwagSettingsApi {
    SwagClient client;

    public SwagSettingsApi(SwagClient client) {
        this.client = client;
    }

    public SwagSettingsApi() {
        this.client = new SwagClient();
    }

    public SwagClient getClient() {
        return this.client;
    }

    /**
     * Create a setting in the specified bucket
     * 
     * @param request Request to perform the operation on (required)
     * @return SwagCreateSettingResponse
     * @throws Swagger.ApiException if fails to make API call
     */
    public SwagCreateSettingResponse settingsCreateSetting(Map<String, Object> params) {
        client.assertNotNull(params.get('request'), 'request');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (SwagCreateSettingResponse) client.invoke(
            'POST', '/config/settings/create',
            (SwagCreateSettingRequest) params.get('request'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Apikey' },
            SwagCreateSettingResponse.class
        );
    }
    /**
     * Enumerate the settings in a bucket
     * 
     * @param request Request to perform the operation on (required)
     * @return SwagListSettingsResponse
     * @throws Swagger.ApiException if fails to make API call
     */
    public SwagListSettingsResponse settingsListSettings(Map<String, Object> params) {
        client.assertNotNull(params.get('request'), 'request');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (SwagListSettingsResponse) client.invoke(
            'POST', '/config/settings/list',
            (SwagListSettingsRequest) params.get('request'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Apikey' },
            SwagListSettingsResponse.class
        );
    }
    /**
     * Update a setting
     * 
     * @param request Request to perform the operation on (required)
     * @return SwagUpdateSettingResponse
     * @throws Swagger.ApiException if fails to make API call
     */
    public SwagUpdateSettingResponse settingsUpdateSetting(Map<String, Object> params) {
        client.assertNotNull(params.get('request'), 'request');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (SwagUpdateSettingResponse) client.invoke(
            'POST', '/config/settings/update',
            (SwagUpdateSettingRequest) params.get('request'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Apikey' },
            SwagUpdateSettingResponse.class
        );
    }
}
